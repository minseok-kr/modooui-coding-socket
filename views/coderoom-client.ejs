<html>

<head>
    <meta charset="utf-8" />
    <script src="/socket.io/socket.io.js"></script>
    <script src="/asset/js/chat.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
        crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/color/jquery.color-2.1.2.min.js" integrity="sha256-H28SdxWrZ387Ldn0qogCzFiUDDxfPiNIyJX7BECQkDE="
        crossorigin="anonymous"></script>
    <!--    <script src="./js/client.js"></script>-->
    <!--    <script src="./js/manager.js"></script>-->

    <script src="../asset/js/common.js"></script>

    <title>모두의 코딩</title>

    <link rel="stylesheet" href='/asset/css/common.css' />
    <link rel="stylesheet" href='/asset/css/client-code.css' />

    <!-- Code Mirror -->
    <link rel="stylesheet" href='/asset/css/code-mirror-style.css' />

    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.41.0/codemirror.min.js"></script>

    <!--        Highlighting -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.41.0/addon/runmode/colorize.js"></script>
    <!--        Javascript -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.41.0/mode/javascript/javascript.min.js"></script>

    <!--        Python -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.41.0/mode/python/python.min.js"></script>


    <link href='https://spoqa.github.io/spoqa-han-sans/css/SpoqaHanSans-kr.css' rel='stylesheet' type='text/css'>

    <link rel="stylesheet" href="/asset/css/bootstrap-theme.min.css">

    <link href="/asset/css/styles.css" rel="stylesheet" type='text/css' />
</head>

<body>

    <% include header %>

    <div class="container">
        <h5 id="txt-room-title">Client</h5>

        <div id="section-problem-info" class="row">

            <div class="col col-md-5">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title problem-subject">문제</h5>
                        <p class="card-text" id="txt-problem-content">0을 출력하시오</p>
                    </div>
                </div>
            </div>

            <div class="col col-md-3">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title problem-subject">예상 입력</h5>
                        <p class="card-text" id="txt-problem-input">none</p>
                    </div>
                </div>
            </div>
            <div class="col col-md-3">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title problem-subject">예상 출력</h5>
                        <p id="quiz-answer" class="card-text">0</p>
                    </div>
                </div>
            </div>
        </div>

        <div id="wrapper-code">
            <div id="txt-code-client"></div>
        </div>

        <div id="container-control">
            <button id='btn_help' class="btn btn-danger">도움 요청</button>
            <button id='btn_build' class="btn btn-warning">빌드</button>
            <button id='btn_submit' class="btn btn-info" disabled>제출</button>

        </div>
        <div id="section-problem-result">
            <div id="status-result" class="row">
                <div class="col">
                    <div class='card md-3' style="margin-right:5px">
                        <div class="card-body">
                            <div class="card-title problem-subject">빌드상태</div>
                            <div class="card-text"></div>
                        </div>
                    </div>
                </div>

                <div class="col">
                    <div class='card md-3'>
                        <div class="card-body">
                            <div class="card-title problem-subject">stdout</div>
                            <div class="card-text"></div>
                        </div>
                    </div>
                </div>

                <div class="col">
                    <div class='card md-3'>
                        <div class="card-body">
                            <div class="card-title problem-subject">stderr</div>
                            <div class="card-text"></div>
                        </div>
                    </div>
                </div>

                <div class="col">
                    <div class='card md-3'>
                        <div class="card-body">
                            <div class="card-title problem-subject">error</div>
                            <div class="card-text"></div>
                        </div>
                    </div>
                </div>

                <div class="col">
                    <div class='card md-3'>
                        <div class="card-body">
                            <div class="card-title problem-subject">결과</div>
                            <div id="quiz-status" class="card-text"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


</body>

<% include inner-chat %>

<div id="section-dialogs"></div>

<script>
    /* Socket.io 초기 설정 */
    $(function () {
        initRoom();

        const socket = io();
        var sendStatus = document.getElementById('send-state');
        socket.emit('join', { 
                userName: "<%= userName %>",
                clientId: "<%= userId %>",
                room: "<%= roomNumber %>",
                photo: "<%= userImg %>"
            })

        socket.on('connection', function (data) {
            
        });

        socket.on('newMessage', (data) => {
            sendStatus.innerHTML = data;
        });

        socket.on('somebodyHelp', (data) => {
            $("#txt-code-manager").addClass('helpped_client');
            $("#txt-code-manager").addClass('block_update');
            $("#txt-code-client textarea").attr("disabled", true);
        });

        socket.on('somebodySubmit', (data) => {
            $("#txt-code-manager").addClass('submitted_client');
            $("#txt-code-manager").addClass('block_update');
            $("#txt-code-client textarea").attr("disabled", true);
        });

        socket.on('submitResult', (data) => {
            $('#btn_submit').removeClass("m-progress");
            if (data == "success") {
                toast('성공했습니다.', data);
            } else if (data == "fail") {
                toast('실패했습니다.', data);
            }
        });

        /**
            *   제출, 완료
            */
        $('#btn_help').click(function () {
            // RestfulAPI or Socket
            socket.emit('help', "me")
            toast("도움을 요청합니다. 기다려주세요...", "fail");
        });

        $('#section-dialogs').on({

        })

        // 빌드: 에러체크
        $('#btn_build').click(function () {
            toast("빌드 중...", "warning");
            $('#btn_build').addClass("m-progress");

            var code = myCodeMirror.getValue();
            $.post("/api/build", { "code": code }, function (data) {
                $('#btn_build').removeClass("m-progress");
                console.log(data);
                if (data.status.includes("success")) {
                    toast("빌드 성공.", "success")

                } else if (data.status.includes("fail")) {
                    toast("빌드 실패.", "fail")
                    $('#btn_submit').attr('disabled', true);
                }


                $('#status-result .card-text')[0].innerHTML = data.status;
                $('#status-result .card-text')[1].innerHTML = data.stdout;
                $('#status-result .card-text')[2].innerHTML = data.stderr;
                $('#status-result .card-text')[3].innerHTML = JSON.stringify(data.error);

                let answerStatus = "";
                let clientAwnser = String(data.stdout.replace('\n', '')); // 정답 비교는 줄바꿈 없는 문자열과.
                if ($('#quiz-answer').html() == clientAwnser) {
                    answerStatus = "정답"

                    $('#btn_submit').removeAttr('disabled');
                } else {
                    answerStatus = "오답"
                }
                $('#quiz-status').html(answerStatus);

            });
        })

        // 채점: 아웃풋과 문제의 아웃풋이 맞는지 비교
        $('#btn_submit').click(function () {
            toast("제출하였습니다. 기다려주세요...");
            $('#btn_submit').addClass("m-progress");

            socket.emit('submit', "it");
        })

        /**
        *   Socket 관련 로직
        */
        function emitMessage(message) {
            socket.emit('message', message);
        }

        function emitCodeUpdate(code) {
            let data = {
                "code": code,
                "userId": "<%= userId %>",
                "roomNumber": "<%= roomNumber %>",
            }

            socket.emit('code', data);
        }

        /**
        *   코드 에디터 초기화.
        */

        myCodeMirror = CodeMirror(document.getElementById("txt-code-client"), {
            lineNumbers: true,
            mode: "python",
            tabSize: 8,
            indentWithTabs: true,
            autofocus: true,
            showCursorWhenSelecting: false
        });
        myCodeMirror.setValue("");

        /**
        *   코드 에디터 동작
        */
        $("#txt-code-client textarea").keyup(function () {
            /* Emmit */
            emitCodeUpdate(myCodeMirror.getValue());

            $('#btn_submit').attr('disabled', true);
        })

        /**
         *  채팅 소켓
         */
         socket.on("receivedMessage", function (msg) {
            let newRoom = msg.room;
            let newImg = msg.img;
            let newName = msg.name;
            let newMsg = msg.text;

            if ($("#dialog-content").css("display") == "none") {
                onNewMessage();
            }

            addMessage(newImg, newName, newMsg);
        })

         socket.on("alertChangeUserState", function (msg) {
            let newName = msg.name;
            // let state = msg.state;
            let state = "";

            if ($("#dialog-content").css("display") == "none") {
                onNewMessage();
            }

            addSystem(newName, state);
        })

        function onNewMessage() {
            $('#dialog-chat').css({
                "border-top-width": "3px",
                "border-left-width": "3px",
                "border-right-width": "3px",
                "border-color": "#F7C251"
            })
            $('#dialog-chat').stop().animate({
                "border-width": "1px",
                "border-color": "#CCCCCC"
            }, 500);
        }

        $(".btn-dialog-toggle").click(function () {
            $("#dialog-content").toggle();
        })

        $('#chat-input input').keypress(function (event) {
            if (event.keyCode == 13) {
                let msg = $(this).val();
                $(this).val("");

                let userImg = "<%= userImg %>";
                let userName = "<%= userName %>";
                let roomNumber = "<%= roomNumber %>";

                socket.emit("sendMessage", {
                    room: roomNumber,
                    userImage: userImg,
                    userName: userName,
                    message: msg
                });

                addMessage(userImg, userName, msg);
            }
        });
    })

    function initRoom() {
        let paths = window.location.href.split('?')
        let room = paths[1];
        $.post('/api/room/getInfo', { "type": "client", "code": room }, function (data) {
            if (data != null) {
                $('#txt-room-title').html(data.title);

                console.log(data);
                let problem = data.problem;
                $('#txt-problem-content').html(problem.descript);
                $('#txt-problem-input').html(problem.input);
                $('#quiz-answer').html(problem.output);

                // {
                //     _id: 5bfc2a2d3cf0fa84950b23e7,
                //         index: 1,
                //             title: '스터디에여',
                //                 description: '히히',
                //                     owner: '',
                //                         users: [''],
                //                             problem: { descript: '', input: '', output: '' }
                // }
            }
        }).fail(function (err) {
            console.log(err)
            if (err.status == 401) {
                location.href = "/invite/error.html"
            } else {
                toast("스터디 정보를 불러오는 중에 문제가 발생했습니다.", "fail");
            }
        })
    }

    function toast(message, type = "") {
        let template = "";
        if (type == "success") {
            template = getSuccessToast(message);
        } else if (type == "fail") {
            template = getFailToast(message);
        } else {
            template = getWarningToast(message);
        }

        $('#section-dialogs').append(template);

        // 특정 시간 후 삭제
        setTimeout(function () {
            $('#section-dialogs').children().first().remove()
        }, 2000)
    }

</script>

</html>